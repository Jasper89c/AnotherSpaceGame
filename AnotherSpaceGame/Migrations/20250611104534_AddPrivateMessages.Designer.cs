// <auto-generated />
using System;
using AnotherSpaceGame.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnotherSpaceGame.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250611104534_AddPrivateMessages")]
    partial class AddPrivateMessages
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnotherSpaceGame.Models.AMinerResearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AdvancedEngineering")
                        .HasColumnType("bit");

                    b.Property<int>("AdvancedEngineeringTurnsRequired")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("AsphaBattleship")
                        .HasColumnType("bit");

                    b.Property<int>("AsphaBattleshipTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("AsphaCorvette")
                        .HasColumnType("bit");

                    b.Property<int>("AsphaCorvetteTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("AsphaCruiser")
                        .HasColumnType("bit");

                    b.Property<int>("AsphaCruiserTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("AsphaDestroyer")
                        .HasColumnType("bit");

                    b.Property<int>("AsphaDestroyerTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("AsphaDreadnought")
                        .HasColumnType("bit");

                    b.Property<int>("AsphaDreadnoughtTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("AsphaFrigate")
                        .HasColumnType("bit");

                    b.Property<int>("AsphaFrigateTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("AsphaHeavyStarbase")
                        .HasColumnType("bit");

                    b.Property<int>("AsphaHeavyStarbaseTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("AsphaLightStarbase")
                        .HasColumnType("bit");

                    b.Property<int>("AsphaLightStarbaseTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("AsphaRanger")
                        .HasColumnType("bit");

                    b.Property<int>("AsphaRangerTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("AsphaSeeker")
                        .HasColumnType("bit");

                    b.Property<int>("AsphaSeekerTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("FlagshipEngineering")
                        .HasColumnType("bit");

                    b.Property<int>("FlagshipEngineeringTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("GClassJuggernaught")
                        .HasColumnType("bit");

                    b.Property<int>("GClassJuggernaughtTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("GClassShip")
                        .HasColumnType("bit");

                    b.Property<int>("GClassShipTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("SensorEngineering")
                        .HasColumnType("bit");

                    b.Property<int>("SensorEngineeringTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("StarbaseEngineering")
                        .HasColumnType("bit");

                    b.Property<int>("StarbaseEngineeringTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("StarshipEngineering")
                        .HasColumnType("bit");

                    b.Property<int>("StarshipEngineeringTurnsRequired")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("AMinerResearches");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<decimal>("ArtifactShield")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BattlesLost")
                        .HasColumnType("int");

                    b.Property<int>("BattlesWon")
                        .HasColumnType("int");

                    b.Property<int>("ColoniesExplored")
                        .HasColumnType("int");

                    b.Property<int>("ColoniesLost")
                        .HasColumnType("int");

                    b.Property<int>("ColoniesWon")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DamageProtection")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<double>("EmpireAge")
                        .HasColumnType("float");

                    b.Property<int>("Faction")
                        .HasColumnType("int");

                    b.Property<int?>("FederationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ITechCooldown")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsNPC")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastAction")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("PlanetsPlundered")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlayingSince")
                        .HasColumnType("datetime2");

                    b.Property<int>("PowerRating")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalColonies")
                        .HasColumnType("int");

                    b.Property<int>("TotalPlanets")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("FederationId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Artifacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ArtifactId")
                        .HasColumnType("int");

                    b.Property<int>("ArtifactName")
                        .HasColumnType("int");

                    b.Property<int>("ArtifactType")
                        .HasColumnType("int");

                    b.Property<int>("MaxTotal")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Artifacts");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.BattleLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Attacker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Defender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FederationsId")
                        .HasColumnType("int");

                    b.Property<string>("FleetReport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Outcome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("FederationsId");

                    b.ToTable("Battlelogs");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.ClusterResearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("ColonyClusterLevel1")
                        .HasColumnType("bit");

                    b.Property<int>("ColonyClusterLevel1TurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("ColonyClusterLevel2")
                        .HasColumnType("bit");

                    b.Property<int>("ColonyClusterLevel2TurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("ColonyClusterLevel3")
                        .HasColumnType("bit");

                    b.Property<int>("ColonyClusterLevel3TurnsRequired")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("ClusterResearches");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.CollectiveResearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("CruiserClass")
                        .HasColumnType("bit");

                    b.Property<int>("CruiserClassTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("DestroyerClass")
                        .HasColumnType("bit");

                    b.Property<int>("DestroyerClassTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("FighterClass")
                        .HasColumnType("bit");

                    b.Property<int>("FighterClassTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("FrigateClass")
                        .HasColumnType("bit");

                    b.Property<int>("FrigateClassTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("HClassCruiser")
                        .HasColumnType("bit");

                    b.Property<int>("HClassCruiserTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("HClassDestroyer")
                        .HasColumnType("bit");

                    b.Property<int>("HClassDestroyerTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("HClassDreadnought")
                        .HasColumnType("bit");

                    b.Property<int>("HClassDreadnoughtTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("HClassLeviathan")
                        .HasColumnType("bit");

                    b.Property<int>("HClassLeviathanTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("HClassShips")
                        .HasColumnType("bit");

                    b.Property<int>("HClassShipsTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("HClassStarbase")
                        .HasColumnType("bit");

                    b.Property<int>("HClassStarbaseTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("RClassBattleship")
                        .HasColumnType("bit");

                    b.Property<int>("RClassBattleshipTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("RClassCorvette")
                        .HasColumnType("bit");

                    b.Property<int>("RClassCorvetteTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("RClassDestroyer")
                        .HasColumnType("bit");

                    b.Property<int>("RClassDestroyerTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("RClassDreadnought")
                        .HasColumnType("bit");

                    b.Property<int>("RClassDreadnoughtTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("RClassFrigate")
                        .HasColumnType("bit");

                    b.Property<int>("RClassFrigateTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("RClassJuggernaught")
                        .HasColumnType("bit");

                    b.Property<int>("RClassJuggernaughtTurnsRequired")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("CollectiveResearches");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.CollectiveSpecificResearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("CollectiveClustering")
                        .HasColumnType("bit");

                    b.Property<int>("CollectiveClusteringTurnsRequired")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("CollectiveSpecificResearches");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Commodities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Composite")
                        .HasColumnType("int");

                    b.Property<int>("ConsumerGoods")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<int>("Food")
                        .HasColumnType("int");

                    b.Property<int>("Ore")
                        .HasColumnType("int");

                    b.Property<int>("RawMaterial")
                        .HasColumnType("int");

                    b.Property<int>("RedCrystal")
                        .HasColumnType("int");

                    b.Property<int>("Rutile")
                        .HasColumnType("int");

                    b.Property<int>("StrafezOrganism")
                        .HasColumnType("int");

                    b.Property<int>("TerranMetal")
                        .HasColumnType("int");

                    b.Property<int>("WhiteCrystal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("Commodities");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.CounterAttacks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateGranted")
                        .HasColumnType("datetime2");

                    b.Property<string>("TargetUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("CounterAttacks");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.CyrilClassResearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("CyrilAlloy")
                        .HasColumnType("bit");

                    b.Property<int>("CyrilAlloyTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("CyrilCorvette")
                        .HasColumnType("bit");

                    b.Property<int>("CyrilCorvetteTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("CyrilCruiser")
                        .HasColumnType("bit");

                    b.Property<int>("CyrilCruiserTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("CyrilDestroyer")
                        .HasColumnType("bit");

                    b.Property<int>("CyrilDestroyerTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("CyrilFrigate")
                        .HasColumnType("bit");

                    b.Property<int>("CyrilFrigateTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("LargeCyrilHull")
                        .HasColumnType("bit");

                    b.Property<int>("LargeCyrilHullTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("MediumCyrilHull")
                        .HasColumnType("bit");

                    b.Property<int>("MediumCyrilHullTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("SmallCyrilHull")
                        .HasColumnType("bit");

                    b.Property<int>("SmallCyrilHullTurnsRequired")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("CyrilClassResearches");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.EClassResearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EClassDestroyer")
                        .HasColumnType("bit");

                    b.Property<int>("EClassDestroyerTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("EClassFighter")
                        .HasColumnType("bit");

                    b.Property<int>("EClassFighterTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("EClassFrigate")
                        .HasColumnType("bit");

                    b.Property<int>("EClassFrigateTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("ExaHertzClassRailgun")
                        .HasColumnType("bit");

                    b.Property<int>("ExaHertzClassRailgunTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("ZettaHertzClassRailgun")
                        .HasColumnType("bit");

                    b.Property<int>("ZettaHertzClassRailgunTurnsRequired")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("EClassResearches");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Exploration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ExplorationCompleted")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ExplorationPointsNeeded")
                        .HasColumnType("int");

                    b.Property<int>("ScanningPower")
                        .HasColumnType("int");

                    b.Property<int>("ShipsInFleet")
                        .HasColumnType("int");

                    b.Property<int>("TotalColonies")
                        .HasColumnType("int");

                    b.Property<int>("TotalPlanets")
                        .HasColumnType("int");

                    b.Property<int>("TurnsRequired")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("Explorations");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.FClassResearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("FClassCruiser")
                        .HasColumnType("bit");

                    b.Property<int>("FClassCruiserTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("FClassDestroyer")
                        .HasColumnType("bit");

                    b.Property<int>("FClassDestroyerTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("FClassEngineering")
                        .HasColumnType("bit");

                    b.Property<int>("FClassEngineeringTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("FClassFrigate")
                        .HasColumnType("bit");

                    b.Property<int>("FClassFrigateTurnsRequired")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("FClassResearches");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.FederationApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AppliedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FederationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.HasIndex("FederationId");

                    b.ToTable("FederationApplications");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.FederationMessages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FederationId")
                        .HasColumnType("int");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FederationId");

                    b.HasIndex("SenderId");

                    b.ToTable("FederationMessages");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.FederationWar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttackerFederationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeclaredAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DefenderFederationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttackerFederationId");

                    b.HasIndex("DefenderFederationId");

                    b.ToTable("FederationWars");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Federations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FederationDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FederationLeaderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FederationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaximumMembers")
                        .HasColumnType("int");

                    b.Property<int>("TotalMembers")
                        .HasColumnType("int");

                    b.Property<int>("TotalPlanets")
                        .HasColumnType("int");

                    b.Property<int>("TotalPowerating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FederationLeaderId");

                    b.ToTable("Federations");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Fleet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.Property<int>("TotalPowerRating")
                        .HasColumnType("int");

                    b.Property<int>("TotalShips")
                        .HasColumnType("int");

                    b.Property<int>("TotalUpkeep")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Fleets");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.GuardianResearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AdvancedEngineering")
                        .HasColumnType("bit");

                    b.Property<int>("AdvancedEngineeringTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("AdvancedScouts")
                        .HasColumnType("bit");

                    b.Property<int>("AdvancedScoutsTurnsRequired")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("CorvetteClass")
                        .HasColumnType("bit");

                    b.Property<int>("CorvetteClassTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("CruiserClass")
                        .HasColumnType("bit");

                    b.Property<int>("CruiserClassTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("DestroyerClass")
                        .HasColumnType("bit");

                    b.Property<int>("DestroyerClassTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("FighterClass")
                        .HasColumnType("bit");

                    b.Property<int>("FighterClassTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("FocusCrystal")
                        .HasColumnType("bit");

                    b.Property<int>("FocusCrystalTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("FrigateClass")
                        .HasColumnType("bit");

                    b.Property<int>("FrigateClassTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("KClassCruiser")
                        .HasColumnType("bit");

                    b.Property<int>("KClassCruiserTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("KClassDestroyer")
                        .HasColumnType("bit");

                    b.Property<int>("KClassDestroyerTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("LClassCruiser")
                        .HasColumnType("bit");

                    b.Property<int>("LClassCruiserTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("LClassDestroyer")
                        .HasColumnType("bit");

                    b.Property<int>("LClassDestroyerTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("LClassFrigate")
                        .HasColumnType("bit");

                    b.Property<int>("LClassFrigateTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("LanceTorpodoes")
                        .HasColumnType("bit");

                    b.Property<int>("LanceTorpodoesTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("OrganicSensors")
                        .HasColumnType("bit");

                    b.Property<int>("OrganicSensorsTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("WeaponsPlatform")
                        .HasColumnType("bit");

                    b.Property<int>("WeaponsPlatformTurnsRequired")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("GuardianResearches");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.ImportantEvents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ImportantEventTypes")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("ImportantEvents");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Infrastructer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agriculture")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Commercial")
                        .HasColumnType("int");

                    b.Property<int>("Housing")
                        .HasColumnType("int");

                    b.Property<int>("ITechInvestmentTurns")
                        .HasColumnType("int");

                    b.Property<int>("ITechInvestmentTurnsRequired")
                        .HasColumnType("int");

                    b.Property<int>("Industry")
                        .HasColumnType("int");

                    b.Property<int>("Mining")
                        .HasColumnType("int");

                    b.Property<int>("TotalLevels")
                        .HasColumnType("int");

                    b.Property<int>("TurnsRemaining")
                        .HasColumnType("int");

                    b.Property<int>("TurnsRequired")
                        .HasColumnType("int");

                    b.Property<int>("UnusedLevels")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("Infrastructers");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.MarauderResearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AdvancedEngineering")
                        .HasColumnType("bit");

                    b.Property<int>("AdvancedEngineeringTurnsRequired")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Class3MarauderHull")
                        .HasColumnType("bit");

                    b.Property<int>("Class3MarauderHullTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("Class4MarauderHull")
                        .HasColumnType("bit");

                    b.Property<int>("Class4MarauderHullTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("Class5MarauderHull")
                        .HasColumnType("bit");

                    b.Property<int>("Class5MarauderHullTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("Class6MarauderHull")
                        .HasColumnType("bit");

                    b.Property<int>("Class6MarauderHullTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("MarauderBattleship")
                        .HasColumnType("bit");

                    b.Property<int>("MarauderBattleshipTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("MarauderCorvette")
                        .HasColumnType("bit");

                    b.Property<int>("MarauderCorvetteTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("MarauderCruiser")
                        .HasColumnType("bit");

                    b.Property<int>("MarauderCruiserTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("MarauderDestroyer")
                        .HasColumnType("bit");

                    b.Property<int>("MarauderDestroyerTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("MarauderFrigate")
                        .HasColumnType("bit");

                    b.Property<int>("MarauderFrigateTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("TypeDBattleship")
                        .HasColumnType("bit");

                    b.Property<int>("TypeDBattleshipTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("TypeDCruiser")
                        .HasColumnType("bit");

                    b.Property<int>("TypeDCruiserTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("TypeDDestroyer")
                        .HasColumnType("bit");

                    b.Property<int>("TypeDDestroyerTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("TypeDFrigate")
                        .HasColumnType("bit");

                    b.Property<int>("TypeDFrigateTurnsRequired")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("MarauderResearches");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.MarketPosts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MarketType")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("MarketPosts");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Missions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Mission1")
                        .HasColumnType("bit");

                    b.Property<bool>("Mission10")
                        .HasColumnType("bit");

                    b.Property<bool>("Mission2")
                        .HasColumnType("bit");

                    b.Property<bool>("Mission3")
                        .HasColumnType("bit");

                    b.Property<bool>("Mission4")
                        .HasColumnType("bit");

                    b.Property<bool>("Mission5")
                        .HasColumnType("bit");

                    b.Property<bool>("Mission6")
                        .HasColumnType("bit");

                    b.Property<bool>("Mission7")
                        .HasColumnType("bit");

                    b.Property<bool>("Mission8")
                        .HasColumnType("bit");

                    b.Property<bool>("Mission9")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.NPCs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ArtifactShield")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BattlesLost")
                        .HasColumnType("int");

                    b.Property<int>("BattlesWon")
                        .HasColumnType("int");

                    b.Property<int>("ColoniesExplored")
                        .HasColumnType("int");

                    b.Property<int>("ColoniesLost")
                        .HasColumnType("int");

                    b.Property<int>("ColoniesWon")
                        .HasColumnType("int");

                    b.Property<DateTime>("DamageProtection")
                        .HasColumnType("datetime2");

                    b.Property<double>("EmpireAge")
                        .HasColumnType("float");

                    b.Property<int>("Faction")
                        .HasColumnType("int");

                    b.Property<int?>("FederationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsNPC")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastAction")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlanetsPlundered")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlayingSince")
                        .HasColumnType("datetime2");

                    b.Property<int>("PowerRating")
                        .HasColumnType("int");

                    b.Property<int>("TotalColonies")
                        .HasColumnType("int");

                    b.Property<int>("TotalPlanets")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FederationId");

                    b.ToTable("NPCs");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Planets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agriculture")
                        .HasColumnType("int");

                    b.Property<decimal>("AgricultureModifier")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ArtifactModifier")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AvailableLabour")
                        .HasColumnType("int");

                    b.Property<int>("AvailableOre")
                        .HasColumnType("int");

                    b.Property<int>("Commercial")
                        .HasColumnType("int");

                    b.Property<int>("CurrentPopulation")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeAcquired")
                        .HasColumnType("datetime2");

                    b.Property<int>("FoodRequired")
                        .HasColumnType("int");

                    b.Property<int>("GoodsRequired")
                        .HasColumnType("int");

                    b.Property<int>("Housing")
                        .HasColumnType("int");

                    b.Property<int>("Industry")
                        .HasColumnType("int");

                    b.Property<int>("LandAvailable")
                        .HasColumnType("int");

                    b.Property<int>("Loyalty")
                        .HasColumnType("int");

                    b.Property<int>("MaxPopulation")
                        .HasColumnType("int");

                    b.Property<int>("MineralProduced")
                        .HasColumnType("int");

                    b.Property<int>("Mining")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OreModifier")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PlanetId")
                        .HasColumnType("int");

                    b.Property<decimal>("PopulationModifier")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PowerRating")
                        .HasColumnType("int");

                    b.Property<int>("TotalLand")
                        .HasColumnType("int");

                    b.Property<int>("TotalPlanets")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.PrivateMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUserId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("ReceiverId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ApplicationUserId1");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("PrivateMessages");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.ProjectsResearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("CapsuleLaboratory")
                        .HasColumnType("bit");

                    b.Property<int>("CapsuleLaboratoryTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("ITechLaboratory")
                        .HasColumnType("bit");

                    b.Property<int>("ITechLaboratoryTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("KalZulArtifact")
                        .HasColumnType("bit");

                    b.Property<int>("KalZulArtifactTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("KalZulOvermind")
                        .HasColumnType("bit");

                    b.Property<int>("KalZulOvermindTurnsRequired")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("ProjectsResearches");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Ships", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildRate")
                        .HasColumnType("int");

                    b.Property<bool>("CanCapture")
                        .HasColumnType("bit");

                    b.Property<decimal>("CapChance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ChemicalShield")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ChemicalWeapon")
                        .HasColumnType("int");

                    b.Property<int>("Composite")
                        .HasColumnType("int");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<int>("CostToBuild")
                        .HasColumnType("int");

                    b.Property<decimal>("EnergyShield")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EnergyWeapon")
                        .HasColumnType("int");

                    b.Property<int>("Hull")
                        .HasColumnType("int");

                    b.Property<bool>("ImmuneToCapture")
                        .HasColumnType("bit");

                    b.Property<decimal>("KineticShield")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KineticWeapon")
                        .HasColumnType("int");

                    b.Property<decimal>("MissileShield")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MissileWeapon")
                        .HasColumnType("int");

                    b.Property<bool>("NoDefense")
                        .HasColumnType("bit");

                    b.Property<bool>("NoRetal")
                        .HasColumnType("bit");

                    b.Property<int>("PowerRating")
                        .HasColumnType("int");

                    b.Property<int>("Range")
                        .HasColumnType("int");

                    b.Property<int>("RedCrystal")
                        .HasColumnType("int");

                    b.Property<int>("Rutile")
                        .HasColumnType("int");

                    b.Property<int>("ScanningPower")
                        .HasColumnType("int");

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipType")
                        .HasColumnType("int");

                    b.Property<int>("StrafezOrganism")
                        .HasColumnType("int");

                    b.Property<int>("TerranMetal")
                        .HasColumnType("int");

                    b.Property<int>("Upkeep")
                        .HasColumnType("int");

                    b.Property<int>("Weapon")
                        .HasColumnType("int");

                    b.Property<int>("WhiteCrystal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.StrafezResearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("BasicGeneticEngineering")
                        .HasColumnType("bit");

                    b.Property<int>("BasicGeneticEngineeringTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("LargeGeneticEngineering")
                        .HasColumnType("bit");

                    b.Property<int>("LargeGeneticEngineeringTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("LargeStrafezRunnerFodder")
                        .HasColumnType("bit");

                    b.Property<int>("LargeStrafezRunnerFodderTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("SmallGeneticEngineering")
                        .HasColumnType("bit");

                    b.Property<int>("SmallGeneticEngineeringTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("SmallStrafezRunnerFodder")
                        .HasColumnType("bit");

                    b.Property<int>("SmallStrafezRunnerFodderTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("StrafezQueenKing")
                        .HasColumnType("bit");

                    b.Property<int>("StrafezQueenKingTurnsRequired")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("StrafezResearches");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.TerranResearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AdvancedRadar")
                        .HasColumnType("bit");

                    b.Property<int>("AdvancedRadarTurnsRequired")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("CrystalLenses")
                        .HasColumnType("bit");

                    b.Property<int>("CrystalLensesTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("LargeTerranHull")
                        .HasColumnType("bit");

                    b.Property<int>("LargeTerranHullTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("MediumTerranHull")
                        .HasColumnType("bit");

                    b.Property<int>("MediumTerranHullTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("PhotonCorvette")
                        .HasColumnType("bit");

                    b.Property<int>("PhotonCorvetteTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("PhotonCruiser")
                        .HasColumnType("bit");

                    b.Property<int>("PhotonCruiserTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("PhotonDestroyer")
                        .HasColumnType("bit");

                    b.Property<int>("PhotonDestroyerTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("PhotonFrigate")
                        .HasColumnType("bit");

                    b.Property<int>("PhotonFrigateTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("PhotonTorpedo")
                        .HasColumnType("bit");

                    b.Property<int>("PhotonTorpedoTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("SmallTerranHull")
                        .HasColumnType("bit");

                    b.Property<int>("SmallTerranHullTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("TerranAdvancedScout")
                        .HasColumnType("bit");

                    b.Property<int>("TerranAdvancedScoutTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("TerranBattleship")
                        .HasColumnType("bit");

                    b.Property<int>("TerranBattleshipTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("TerranCorvette")
                        .HasColumnType("bit");

                    b.Property<int>("TerranCorvetteTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("TerranCruiser")
                        .HasColumnType("bit");

                    b.Property<int>("TerranCruiserTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("TerranDestroyer")
                        .HasColumnType("bit");

                    b.Property<int>("TerranDestroyerTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("TerranDreadnaught")
                        .HasColumnType("bit");

                    b.Property<int>("TerranDreadnaughtTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("TerranFrigate")
                        .HasColumnType("bit");

                    b.Property<int>("TerranFrigateTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("TerranJuggernaught")
                        .HasColumnType("bit");

                    b.Property<int>("TerranJuggernaughtTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("TerranStarbase")
                        .HasColumnType("bit");

                    b.Property<int>("TerranStarbaseTurnsRequired")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("TerranResearches");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Turns", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CurrentTurns")
                        .HasColumnType("int");

                    b.Property<int>("MaxTurns")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("Turns");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.UserProjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("CapsuleLab")
                        .HasColumnType("bit");

                    b.Property<int>("CapsuleLabCreditsRequired")
                        .HasColumnType("int");

                    b.Property<int>("CapsuleLabTurnsRequired")
                        .HasColumnType("int");

                    b.Property<DateTime>("CapsuleLabUnlockTimer")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Itech")
                        .HasColumnType("bit");

                    b.Property<int>("ItechCreditsRequired")
                        .HasColumnType("int");

                    b.Property<int>("ItechTurnsRequired")
                        .HasColumnType("int");

                    b.Property<DateTime>("ItechUnlockTimer")
                        .HasColumnType("datetime2");

                    b.Property<bool>("KalZulHektar")
                        .HasColumnType("bit");

                    b.Property<int>("KalZulHektarCreditsRequired")
                        .HasColumnType("int");

                    b.Property<int>("KalZulHektarTurnsRequired")
                        .HasColumnType("int");

                    b.Property<DateTime>("KalZulHektarUnlockTimer")
                        .HasColumnType("datetime2");

                    b.Property<bool>("KalZulLoktar")
                        .HasColumnType("bit");

                    b.Property<int>("KalZulLoktarCreditsRequired")
                        .HasColumnType("int");

                    b.Property<int>("KalZulLoktarTurnsRequired")
                        .HasColumnType("int");

                    b.Property<DateTime>("KalZulLoktarUnlockTimer")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UnreverseEngineering")
                        .HasColumnType("bit");

                    b.Property<int>("UnreverseEngineeringCreditsRequired")
                        .HasColumnType("int");

                    b.Property<int>("UnreverseEngineeringTurnsRequired")
                        .HasColumnType("int");

                    b.Property<DateTime>("UnreverseEngineeringUnlockTimer")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("UserProjects");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.ViralResearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AdvancedExploration")
                        .HasColumnType("bit");

                    b.Property<int>("AdvancedExplorationTurnsRequired")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("BClassCruiser")
                        .HasColumnType("bit");

                    b.Property<int>("BClassCruiserTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("BClassStarbase")
                        .HasColumnType("bit");

                    b.Property<int>("BClassStarbaseTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("Class1ViralHull")
                        .HasColumnType("bit");

                    b.Property<int>("Class1ViralHullTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("Class2ViralHull")
                        .HasColumnType("bit");

                    b.Property<int>("Class2ViralHullTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("KohoutekScout")
                        .HasColumnType("bit");

                    b.Property<int>("KohoutekScoutTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("VClassCruiser")
                        .HasColumnType("bit");

                    b.Property<int>("VClassCruiserTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("VClassDestroyer")
                        .HasColumnType("bit");

                    b.Property<int>("VClassDestroyerTurnsRequired")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("ViralResearches");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.ViralReversedShips", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AMinerReversedShipsCount")
                        .HasColumnType("int");

                    b.Property<int>("AminerShip1Id")
                        .HasColumnType("int");

                    b.Property<int>("AminerShip2Id")
                        .HasColumnType("int");

                    b.Property<int>("AminerShip3Id")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MarauderReversedShipsCount")
                        .HasColumnType("int");

                    b.Property<int>("MarauderShip1Id")
                        .HasColumnType("int");

                    b.Property<int>("MarauderShip2Id")
                        .HasColumnType("int");

                    b.Property<int>("MarauderShip3Id")
                        .HasColumnType("int");

                    b.Property<int>("TerranReversedShipsCount")
                        .HasColumnType("int");

                    b.Property<int>("TerranShip1Id")
                        .HasColumnType("int");

                    b.Property<int>("TerranShip2Id")
                        .HasColumnType("int");

                    b.Property<int>("TerranShip3Id")
                        .HasColumnType("int");

                    b.Property<int>("ViralReversedShipsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("ViralReversedShips");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.ViralSpecificResearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("UnreverseEngineering")
                        .HasColumnType("bit");

                    b.Property<int>("UnreverseEngineeringTurnsRequired")
                        .HasColumnType("int");

                    b.Property<bool>("ViralClustering")
                        .HasColumnType("bit");

                    b.Property<int>("ViralClusteringTurnsRequired")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("ViralSpecificResearches");
                });

            modelBuilder.Entity("FederationsFederations", b =>
                {
                    b.Property<int>("FederationWarsId")
                        .HasColumnType("int");

                    b.Property<int>("FederationsId")
                        .HasColumnType("int");

                    b.HasKey("FederationWarsId", "FederationsId");

                    b.HasIndex("FederationsId");

                    b.ToTable("FederationsFederations");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.AMinerResearch", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("AMinerResearch")
                        .HasForeignKey("AnotherSpaceGame.Models.AMinerResearch", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.ApplicationUser", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.Federations", "Federation")
                        .WithMany("FederationMembers")
                        .HasForeignKey("FederationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Federation");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Artifacts", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Artifacts")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.BattleLogs", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Battlelogs")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnotherSpaceGame.Models.Federations", null)
                        .WithMany("FederationActivity")
                        .HasForeignKey("FederationsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.ClusterResearch", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("ClusterResearch")
                        .HasForeignKey("AnotherSpaceGame.Models.ClusterResearch", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.CollectiveResearch", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("CollectiveResearch")
                        .HasForeignKey("AnotherSpaceGame.Models.CollectiveResearch", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.CollectiveSpecificResearch", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("CollectiveSpecificResearch")
                        .HasForeignKey("AnotherSpaceGame.Models.CollectiveSpecificResearch", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Commodities", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("Commodities")
                        .HasForeignKey("AnotherSpaceGame.Models.Commodities", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.CounterAttacks", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("CounterAttacks")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.CyrilClassResearch", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("CyrilClassResearch")
                        .HasForeignKey("AnotherSpaceGame.Models.CyrilClassResearch", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.EClassResearch", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("EClassResearch")
                        .HasForeignKey("AnotherSpaceGame.Models.EClassResearch", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Exploration", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("Exploration")
                        .HasForeignKey("AnotherSpaceGame.Models.Exploration", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.FClassResearch", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("FClassResearch")
                        .HasForeignKey("AnotherSpaceGame.Models.FClassResearch", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.FederationApplication", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("FederationApplication")
                        .HasForeignKey("AnotherSpaceGame.Models.FederationApplication", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnotherSpaceGame.Models.Federations", "Federation")
                        .WithMany("FederationApplicants")
                        .HasForeignKey("FederationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Federation");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.FederationMessages", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.Federations", "Federation")
                        .WithMany("FederationDiscussion")
                        .HasForeignKey("FederationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Federation");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.FederationWar", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.Federations", "AttackerFederation")
                        .WithMany()
                        .HasForeignKey("AttackerFederationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnotherSpaceGame.Models.Federations", "DefenderFederation")
                        .WithMany()
                        .HasForeignKey("DefenderFederationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AttackerFederation");

                    b.Navigation("DefenderFederation");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Federations", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "FederationLeader")
                        .WithMany()
                        .HasForeignKey("FederationLeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FederationLeader");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Fleet", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Fleets")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.GuardianResearch", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("GuardianResearch")
                        .HasForeignKey("AnotherSpaceGame.Models.GuardianResearch", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.ImportantEvents", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("ImportantEvents")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Infrastructer", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("Infrastructer")
                        .HasForeignKey("AnotherSpaceGame.Models.Infrastructer", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.MarauderResearch", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("MarauderResearch")
                        .HasForeignKey("AnotherSpaceGame.Models.MarauderResearch", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.MarketPosts", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("MarketPosts")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Missions", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("Missions")
                        .HasForeignKey("AnotherSpaceGame.Models.Missions", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.NPCs", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.Federations", "Federation")
                        .WithMany()
                        .HasForeignKey("FederationId");

                    b.Navigation("Federation");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Planets", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Planets")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.PrivateMessage", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", null)
                        .WithMany("PrivateMessagesReceived")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", null)
                        .WithMany("PrivateMessagesSent")
                        .HasForeignKey("ApplicationUserId1");

                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.ProjectsResearch", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("ProjectsResearch")
                        .HasForeignKey("AnotherSpaceGame.Models.ProjectsResearch", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.StrafezResearch", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("StrafezResearch")
                        .HasForeignKey("AnotherSpaceGame.Models.StrafezResearch", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.TerranResearch", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("TerranResearch")
                        .HasForeignKey("AnotherSpaceGame.Models.TerranResearch", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Turns", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("Turns")
                        .HasForeignKey("AnotherSpaceGame.Models.Turns", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.UserProjects", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("UserProjects")
                        .HasForeignKey("AnotherSpaceGame.Models.UserProjects", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.ViralResearch", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("ViralResearch")
                        .HasForeignKey("AnotherSpaceGame.Models.ViralResearch", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.ViralReversedShips", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("ViralReversedShips")
                        .HasForeignKey("AnotherSpaceGame.Models.ViralReversedShips", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.ViralSpecificResearch", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("ViralSpecificResearch")
                        .HasForeignKey("AnotherSpaceGame.Models.ViralSpecificResearch", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("FederationsFederations", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.Federations", null)
                        .WithMany()
                        .HasForeignKey("FederationWarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnotherSpaceGame.Models.Federations", null)
                        .WithMany()
                        .HasForeignKey("FederationsId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AnotherSpaceGame.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.ApplicationUser", b =>
                {
                    b.Navigation("AMinerResearch")
                        .IsRequired();

                    b.Navigation("Artifacts");

                    b.Navigation("Battlelogs");

                    b.Navigation("ClusterResearch")
                        .IsRequired();

                    b.Navigation("CollectiveResearch")
                        .IsRequired();

                    b.Navigation("CollectiveSpecificResearch")
                        .IsRequired();

                    b.Navigation("Commodities")
                        .IsRequired();

                    b.Navigation("CounterAttacks");

                    b.Navigation("CyrilClassResearch")
                        .IsRequired();

                    b.Navigation("EClassResearch")
                        .IsRequired();

                    b.Navigation("Exploration")
                        .IsRequired();

                    b.Navigation("FClassResearch")
                        .IsRequired();

                    b.Navigation("FederationApplication")
                        .IsRequired();

                    b.Navigation("Fleets");

                    b.Navigation("GuardianResearch")
                        .IsRequired();

                    b.Navigation("ImportantEvents");

                    b.Navigation("Infrastructer")
                        .IsRequired();

                    b.Navigation("MarauderResearch")
                        .IsRequired();

                    b.Navigation("MarketPosts");

                    b.Navigation("Missions")
                        .IsRequired();

                    b.Navigation("Planets");

                    b.Navigation("PrivateMessagesReceived");

                    b.Navigation("PrivateMessagesSent");

                    b.Navigation("ProjectsResearch")
                        .IsRequired();

                    b.Navigation("StrafezResearch")
                        .IsRequired();

                    b.Navigation("TerranResearch")
                        .IsRequired();

                    b.Navigation("Turns")
                        .IsRequired();

                    b.Navigation("UserProjects")
                        .IsRequired();

                    b.Navigation("ViralResearch")
                        .IsRequired();

                    b.Navigation("ViralReversedShips")
                        .IsRequired();

                    b.Navigation("ViralSpecificResearch")
                        .IsRequired();
                });

            modelBuilder.Entity("AnotherSpaceGame.Models.Federations", b =>
                {
                    b.Navigation("FederationActivity");

                    b.Navigation("FederationApplicants");

                    b.Navigation("FederationDiscussion");

                    b.Navigation("FederationMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
