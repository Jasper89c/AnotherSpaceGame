@page
@model AnotherSpaceGame.Areas.Game.Pages.ResearchModel
@{
    ViewData["Title"] = "Infrastructure Research"; 
    Layout = "~/Views/Shared/_LayoutGame.cshtml";

    var HousingIncrease = Model.Infrastructure.Housing * 10;
    var CommercialIncrease = Model.Infrastructure.Commercial * 10;
    var AgricultureIncrease = Model.Infrastructure.Agriculture * 10;
    var IndustryIncrease = Model.Infrastructure.Industry * 10;
    var MiningIncrease = Model.Infrastructure.Mining * 10;
}

<h2>Infrastructure Research</h2>

@if (!string.IsNullOrEmpty(Model.StatusMessage))
{
    <div class="alert alert-info">@Html.Raw(Model.StatusMessage)</div>
}
<div class="container-fluid">
	<div class="row">
		<div class="col-md-6">
			<table class="table table-bordered table-sm">
				<thead>
					<tr>
						<th>
							Information:
						</th>						
					</tr>
				</thead>
				<tbody>
					<tr>
						<td><strong>Current Level:</strong> @Model.CurrentLevel / @Model.MaxLevel</td>
					</tr>
					<tr>
						<td><strong>Unused Levels:</strong> @Model.UnusedLevels</td>
					</tr>
					<tr>
						<td><strong>Turns for next level:</strong> @Model.TurnsRemaining.ToString("N0")</td>
					</tr>
					<tr>
						<td><strong>Available Turns:</strong> @Model.AvailableTurns.ToString("N0")</td>
					</tr>
				</tbody>
			</table>
		</div>
		<div class="col-md-6">
			<table class="table table-sm table-bordered">
				<thead>
					<tr>
						<td><strong>Current Levels:</strong></td>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td><strong>Housing:</strong> @Model.Infrastructure.Housing
						<br />
						<p>Housing increased by @HousingIncrease%</p>
						</td>
					</tr>
					<tr>
						<td>
							<strong>Commercial:</strong> @Model.Infrastructure.Commercial
							<br />
							<p>Commercial increased by @CommercialIncrease%</p>
						</td>
					</tr>
					<tr>
						<td>
							<strong>Agriculture:</strong> @Model.Infrastructure.Agriculture
							<br />
							<p>Agriculture increased by @AgricultureIncrease%</p>
						</td>
					</tr>
					<tr>
						<td>
							<strong>Industry:</strong> @Model.Infrastructure.Industry
							<br />
							<p>Industry increased by @IndustryIncrease%</p>
						</td>
					</tr>
					<tr>
						<td>
							<strong>Mining:</strong> @Model.Infrastructure.Mining
							<br />
							<p>Mining increased by @MiningIncrease%</p>
						</td>
					</tr>
				</tbody>
			</table>
		</div>
	</div>
</div>
@if(Model.CurrentLevel < Model.MaxLevel)
{    
<form method="post" asp-page-handler="GainLevels" class="mb-4">
        <div class="mb-2">
            <label for="TurnsToUse" class="form-label">Turns To Use:</label>
            <input asp-for="TurnsToUse" class="form-control" min="1" max="45" value="45"/>
            <span asp-validation-for="TurnsToUse" class="text-danger"></span>
        </div>
    <button type="submit" class="btn btn-primary">Research</button>
        @Html.AntiForgeryToken()
    </form>
}
else
{
    <div class="alert alert-success">You have reached the maximum level for Infrastructure Research.</div>

}

<form method="post" asp-page-handler="AssignPoints" class="mb-4" onsubmit="return confirmAssignPoints();">
    <div class="mb-2">
        <label for="AssignCategory" class="form-label">Assign to:</label>
        <select asp-for="AssignCategory" class="form-select">
            <option value="Housing">Housing</option>
            <option value="Commercial">Commercial</option>
            <option value="Agriculture">Agriculture</option>
            <option value="Industry">Industry</option>
            <option value="Mining">Mining</option>
        </select>
        <span asp-validation-for="AssignCategory" class="text-danger"></span>
    </div>
    <div class="mb-2">
        <label for="PointsToAssign" class="form-label">Points to assign:</label>
        <input asp-for="PointsToAssign" class="form-control" min="1" max="@Model.UnusedLevels" />
        <span asp-validation-for="PointsToAssign" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-success">Assign Points</button>
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function confirmAssignPoints() {
            const category = document.getElementById("AssignCategory").value;
            const points = document.getElementById("PointsToAssign").value;
            return confirm(`Are you sure you want to assign ${points} point(s) to ${category}? This action cannot be undone.`);
        }
    </script>
}
